REPORT Z7689_SPRINT_ADOBE .
* purpose: DISPLAYING PRODUCTION ORDER DETAILS ALONG WITH PLANT AND ORDER ITEM IN THE ALV REPORT.
* DATA HAS BEEN TAKEN FROM TABLE: Z7689_T001W, Z7689_AUFK, Z7689_AFPO.
* DATE:
*USERID: ABHBHAGW
*NAME: ABHAY BHAGWANJEE SINGH
*TRANSPORT REQUEST: LD5K914299
*WORKAREA DECLARATION
TABLES : Z7689_T001W, Z7689_AUFK, Z7689_AFPO.

*TYPE DECLARATION
TYPES : BEGIN OF TY_T001W,"User defined internal table type
          WERKS TYPE Z7689_T001W-WERKS,"PLant
          NAME1 TYPE Z7689_T001W-NAME1,"Name
          BWKEY TYPE Z7689_T001W-BWKEY,"Valuation Area
        END OF TY_T001W.

*INTERNAL TABLE, WORK AREA
DATA: IT_T001W TYPE TABLE OF TY_T001W,
      WA_T001W TYPE TY_T001W.

*TYPE DECLARATION
TYPES : BEGIN OF TY_ORDERS,
          WERKS TYPE Z7689_AUFK-WERKS,"Plant
          AUFNR TYPE Z7689_AUFK-AUFNR,"Order Number
          AUTYP TYPE Z7689_AUFK-AUTYP,"Order Category
          KTEXT TYPE Z7689_AUFK-KTEXT,"Description
          POSNR TYPE Z7689_AFPO-POSNR,"Order Item Number
          PSMNG TYPE Z7689_AFPO-PSMNG,"Order Ite Quantity
          MEINS TYPE Z7689_AFPO-MEINS,"Base Unit of Measure
          MATNR TYPE Z7689_AFPO-MATNR,"Material Number of Order
        END OF TY_ORDERS.

*INTERNAL TABLE, WORK AREA
DATA : IT_ORDERS      TYPE TABLE OF TY_ORDERS,
       WA_ORDERS      TYPE TY_ORDERS,
       IT_PLANT_WISE_ORDERS TYPE TABLE OF TY_ORDERS.

*FOR PRINTER DIALOG SCREEN
DATA : WA_OUTPUTPARAMS TYPE SFPOUTPUTPARAMS,"Form Processing Output Parameter
       WA_DOCPARAMS TYPE SFPDOCPARAMS. "Form Parameters for Form Processing

DATA : GV_FM_NAME TYPE RS38L_FNAM. "Name of Function Module

SELECT-OPTIONS : S_WERKS FOR Z7689_T001W-WERKS. "INPUT THIS NEEDS TO BE CHANGED

START-OF-SELECTION.
   WA_OUTPUTPARAMS-DEVICE = 'PRINTER'."Output device
   WA_OUTPUTPARAMS-DEST  = 'LP01'."Spool: Output device
   WA_OUTPUTPARAMS-NODIALOG = 'X'."Suppress User Dialog
   WA_OUTPUTPARAMS-PREVIEW  = 'X'."Preview

SELECT WERKS NAME1 BWKEY FROM Z7689_T001W INTO TABLE IT_T001W WHERE WERKS IN S_WERKS.
*  ERROR HANDLING
IF SY-SUBRC <> 0.
  MESSAGE E010(ZYNY_MESSAGE_CLASS) WITH 'NO ROW SELECTED'.
*ELSE.
*  WRITE : / 'WERKS',
*          7 'NAME1',
*          38 'BWKEY'.
*  LOOP AT IT_T001W INTO WA_T001W.
*    WRITE : / WA_T001W-WERKS,
*            7 WA_T001W-NAME1,
*            38 WA_T001W-BWKEY.
*  ENDLOOP.
ENDIF.

*ULINE.

IF IT_T001W IS NOT INITIAL.
 SELECT A~WERKS A~AUFNR A~AUTYP A~KTEXT B~POSNR B~PSMNG B~MEINS B~MATNR
   INTO TABLE IT_ORDERS FROM
        Z7689_AUFK AS A INNER JOIN
        Z7689_AFPO AS B ON
        A~AUFNR EQ B~AUFNR
        FOR ALL ENTRIES IN IT_T001W
        WHERE A~WERKS EQ IT_T001W-WERKS.
ENDIF.

SORT IT_ORDERS BY WERKS.

*WRITE : / 'WERKS',
*        7 'AUFNR',
*        20 'AUTYP',
*        26 'KTEXT',
*        67 'POSNR',
*        73 'PSMNG',
*        90 'MEINS',
*        96 'MATNR'.
*
*LOOP AT IT_ORDERS INTO WA_ORDERS.
*
*WRITE : / WA_ORDERS-WERKS,
*        7 WA_ORDERS-AUFNR,
*        20 WA_ORDERS-AUTYP,
*        26 WA_ORDERS-KTEXT,
*        67 WA_ORDERS-POSNR,
*        73 WA_ORDERS-PSMNG,
*        90 WA_ORDERS-MEINS,
*        96 WA_ORDERS-MATNR.
*ENDLOOP.
*ULINE.

REFRESH IT_PLANT_WISE_ORDERS.

CALL FUNCTION 'FP_JOB_OPEN'
     CHANGING
       IE_OUTPUTPARAMS       = WA_OUTPUTPARAMS
*    EXCEPTIONS
*      CANCEL                = 1
*      USAGE_ERROR           = 2
*      SYSTEM_ERROR          = 3
*      INTERNAL_ERROR        = 4
*      OTHERS                = 5
             .
   IF SY-SUBRC <> 0.
*    Implement suitable error handling here
   ENDIF.

LOOP AT  IT_ORDERS INTO WA_ORDERS.
  APPEND WA_ORDERS TO IT_PLANT_WISE_ORDERS.

  AT END OF WERKS.
   IF IT_PLANT_WISE_ORDERS IS NOT INITIAL.
*    call the fM

*     WRITE : / 'AT END ', WA_ORDERS-WERKS.
     CLEAR WA_T001W.
     READ TABLE IT_T001W INTO WA_T001W WITH KEY WERKS = WA_ORDERS-WERKS.
*     WRITE: / 'WORK AREA ', WA_T001W-WERKS, ' ', WA_T001W-NAME1, ' ',WA_T001W-BWKEY.
*     WRITE : / 'WERKS',
*            7 'AUFNR',
*            20 'AUTYP',
*            26 'KTEXT',
*            67 'POSNR',
*            73 'PSMNG',
*            90 'MEINS',
*            96 'MATNR'.
*
*    LOOP AT IT_PLANT_WISE_ORDERS INTO WA_ORDERS.
*    WRITE : / WA_ORDERS-WERKS,
*            7 WA_ORDERS-AUFNR,
*            20 WA_ORDERS-AUTYP,
*            26 WA_ORDERS-KTEXT,
*            67 WA_ORDERS-POSNR,
*            73 WA_ORDERS-PSMNG,
*            90 WA_ORDERS-MEINS,
*            96 WA_ORDERS-MATNR.
*    ENDLOOP.
*
*    WRITE : / 'FUNCTION MODULE CALLED'.

   CALL FUNCTION 'FP_FUNCTION_MODULE_NAME'
     EXPORTING
      I_NAME                     = 'Z7689_SPRINT_ADOBE'    " Adobe form name.
    IMPORTING
      E_FUNCNAME                 = GV_FM_NAME
*      E_INTERFACE_TYPE           =
*      EV_FUNCNAME_INBOUND        =
             .
   WA_DOCPARAMS-LANGU = 'E'.
   WA_DOCPARAMS-COUNTRY = 'IN'.

    CALL FUNCTION GV_FM_NAME "'/1BCDWB/SM00006455'
        EXPORTING
*         /1BCDWB/DOCPARAMS        =
          IT_T001W                 = WA_T001W
          IT_ORDERS                = IT_PLANT_WISE_ORDERS
*       IMPORTING
*         /1BCDWB/FORMOUTPUT       =
*       EXCEPTIONS
*         USAGE_ERROR              = 1
*         SYSTEM_ERROR             = 2
*         INTERNAL_ERROR           = 3
*         OTHERS                   = 4
                .
     IF SY-SUBRC <> 0.
*      Implement suitable error handling here
     ENDIF.

*    ULINE.
   ENDIF.
   REFRESH IT_PLANT_WISE_ORDERS.
  ENDAT.
ENDLOOP.

CALL FUNCTION 'FP_JOB_CLOSE'
*     IMPORTING
*       E_RESULT             =
*     EXCEPTIONS
*       USAGE_ERROR          = 1
*       SYSTEM_ERROR         = 2
*       INTERNAL_ERROR       = 3
*       OTHERS               = 4
              .
    IF SY-SUBRC <> 0.
*     Implement suitable error handling here
    ENDIF.