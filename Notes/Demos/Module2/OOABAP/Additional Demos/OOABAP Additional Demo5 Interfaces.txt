*&---------------------------------------------------------------------*
*& Report ZTRCAP_INTERFACES
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZTRCAP_INTERFACES.

* # 1.

*INTERFACE I1.
*  DATA : NUM TYPE I.
*  METHODS : METH1.
*ENDINTERFACE.
*
*CLASS C1 DEFINITION.
*  PUBLIC SECTION.
*  METHODS : METH1.     "CLASS C1'S OWN METHOD
*  INTERFACES : I1.
*ENDCLASS.
*
*CLASS C1 IMPLEMENTATION.
*  METHOD : METH1.
*    WRITE:/5 'I AM METH1 IN C1'.
*  ENDMETHOD.
*
*  METHOD I1~METH1.
*    WRITE:/5 ' I AM METH1 FROM I1'.
*  ENDMETHOD.
*
*ENDCLASS.
*
*START-OF-SELECTION.
*  DATA : OREF TYPE REF TO C1.
*  CREATE OBJECT OREF.
*
*  WRITE:/5 OREF->I1~NUM.
*
*  CALL METHOD OREF->METH1.
*  CALL METHOD OREF->I1~METH1.

* # 2.
**A CLASS WITH AN INTERFCACE SHOULD IMPLEMENT
*ALL THE METHODS OF THAT INTERAFCE.

*
*INTERFACE I1.
*  METHODS : METH1,
*            METH2.
*ENDINTERFACE.
*
*CLASS C1 DEFINITION.
*  PUBLIC SECTION.
*  INTERFACES : I1.
*ENDCLASS.
*
*CLASS C1 IMPLEMENTATION.
*  METHOD I1~METH1.
*    WRITE:/5 'I AM METH1 FROM I1'.
*  ENDMETHOD.
*  METHOD I1~METH2.
*    WRITE:/5 'I AM METH2 FROM I1'.
*  ENDMETHOD.
*ENDCLASS.
*
*START-OF-SELECTION.
*DATA : OREF TYPE REF TO C1.
*CREATE OBJECT OREF.
*CALL METHOD OREF->I1~METH1.
*CALL METHOD OREF->I1~METH2.

* # 3.
**VALUES FOR INTERFACE ATTRIBUTES ARE ASSIGNED AT
*THE TIME OF INCLUSION IN A CLASS.

*
*INTERFACE I1.
*  DATA : NUM1 TYPE I ,
*        NUM2 TYPE I .
*  ENDINTERFACE.
*
* CLASS C1 DEFINITION.
*   PUBLIC SECTION.
*   INTERFACES : I1
*   DATA VALUES NUM1 = 5 NUM2 = 6.
*   METHODS M1.
*   ENDCLASS.
*
*   CLASS C1 IMPLEMENTATION.
*     METHOD M1.
*       WRITE:/5 I1~NUM1,
*                I1~NUM2.
*     ENDMETHOD.
*   ENDCLASS.
*
*   START-OF-SELECTION.
*   DATA : OREF TYPE REF TO C1.
*   CREATE OBJECT OREF.
*   CALL METHOD OREF->M1.
*

* # 4.
**USE OF FINAL METHOD FOR INTERFACE.

*
*INTERFACE I1.
*  METHODS : M1, M2.
*ENDINTERFACE.
*
*CLASS C1 DEFINITION.
*  PUBLIC SECTION.
*  INTERFACES : I1 FINAL METHODS M2.
*ENDCLASS.
*
*CLASS C1 IMPLEMENTATION.
*  METHOD I1~M1.
*    WRITE:/5 'I AM M1 IN C1'.
*  ENDMETHOD.
*  METHOD I1~M2.
*    WRITE:/5 'I AM M2 IN C1'.
*  ENDMETHOD.
*ENDCLASS.
*
*CLASS C2 DEFINITION INHERITING FROM C1.
*  PUBLIC SECTION.
*  METHODS : I1~M1 REDEFINITION.
*ENDCLASS.
*
*CLASS C2 IMPLEMENTATION.
*  METHOD : I1~M1.
*    WRITE:/5 'I AM M1 IN C2'.
*  ENDMETHOD.
*ENDCLASS.
*
*START-OF-SELECTION.
*DATA : OREF1 TYPE REF TO C1,
*       OREF2 TYPE REF TO C2.
* CREATE OBJECT : OREF1 , OREF2.
* CALL METHOD : OREF1->I1~M1,
*               OREF2->I1~M1,
*               OREF1->I1~M2,
*               OREF2->I1~M2.
*
* # 5.
**USE OF INTERFACE REFERNCE VARIABLE. (RECHECK)

*
*INTERFACE I1.
*  CONSTANTS : C_NAME(4) TYPE C VALUE 'ABAP'.
*  DATA: INUM TYPE I.
*  CLASS-DATA : CNUM TYPE I.
*  METHODS : M1.
*  CLASS-METHODS : M2.
*ENDINTERFACE.
*
*CLASS C1 DEFINITION.
*  PUBLIC SECTION.
*  INTERFACES : I1 DATA VALUES INUM = 5 CNUM = 6.
*ENDCLASS.
*
*CLASS C1 IMPLEMENTATION.
*  METHOD I1~M1.
*    WRITE:/5 'I AM METHOD M1 IN C1'.
*  ENDMETHOD.
*
*  METHOD I1~M2.
*    WRITE:/5 'I AM CLASS METHOD M2 IN C1'.
*  ENDMETHOD.
*ENDCLASS.
*
*START-OF-SELECTION.
*  DATA : IREF TYPE REF TO I1,
*         OREF TYPE REF TO C1.
*  CREATE OBJECT : OREF.
*
*  WRITE:/5 OREF->I1~INUM,
*           OREF->I1~CNUM,
*           C1=>I1~CNUM.
*  CALL METHOD : OREF->I1~M1,
*                OREF->I1~M2,
*                C1=>I1~M2.
*
*  WRITE:/5 SY-ULINE.
*  IREF = OREF.
*  WRITE:/5 IREF->INUM,
*           IREF->CNUM,
*           I1=>C_NAME.
*  CALL METHOD : IREF->M1,
*                IREF->M2.
*

* # 6.
**NESTED INTERFACE.
*

*INTERFACE I1.
*  METHODS M1.
*ENDINTERFACE.
*
*INTERFACE I2.
*  METHODS : M1 , M2.
*  INTERFACES I1.
*ENDINTERFACE.
*
*CLASS C1 DEFINITION.
*  PUBLIC SECTION.
*  INTERFACES I2.
*ENDCLASS.
*
*CLASS C1 IMPLEMENTATION.
*
*METHOD : I1~M1.
*  WRITE:/5 'I AM M1 FROM I1'.
*ENDMETHOD.
*
*METHOD : I2~M1.
*  WRITE:/5 'I AM M1 FROM I2'.
*ENDMETHOD.
*
*METHOD : I2~M2.
*  WRITE:/5 'I AM M2 FROM I2'.
*ENDMETHOD.
*
*ENDCLASS.
*
*START-OF-SELECTION.
*  DATA : OREF TYPE REF TO C1.
*CREATE OBJECT OREF.
*CALL METHOD : OREF->I1~M1, "O/P : I AM M1 FROM I1.
*              OREF->I2~M1, "O/P : I AM M1 FROM I2
*              OREF->I2~M2. "O/P : I AM M1 FROM I2

* # 7.
**ALIAS INTERFACES


*INTERFACE I1.
*  METHODS M1.
*ENDINTERFACE.
*
*INTERFACE I2.
*  METHODS : M1 , M2.
*  INTERFACES I1.
*ENDINTERFACE.
*
*CLASS C1 DEFINITION.
*  PUBLIC SECTION.
*  INTERFACES I2.
*  ALIASES METH1 FOR I1~M1.
*  ALIASES METH2 FOR I2~M2.
*  ALIASES METH3 FOR I2~M1.
*ENDCLASS.
*
*CLASS C1 IMPLEMENTATION.
*
*METHOD : I1~M1.
*  WRITE:/5 'I AM M1 FROM I1'.
*ENDMETHOD.
*
*METHOD : I2~M1.
*  WRITE:/5 'I AM M1 FROM I2'.
*ENDMETHOD.
*
*METHOD : I2~M2.
*  WRITE:/5 'I AM M2 FROM I2'.
*ENDMETHOD.
*
*ENDCLASS.
*
*START-OF-SELECTION.
*  DATA : OREF TYPE REF TO C1.
*CREATE OBJECT OREF.
*CALL METHOD : OREF->METH1, "O/P : I AM M1 FROM I1.
*              OREF->METH3, "O/P : I AM M1 FROM I2
*              OREF->METH2. "O/P : I AM M1 FROM I2

* # 8.
*POLYMORPHISM VIA INTERFACES (HOW A METHOD OF AN INTERFACE CAN BE INTERPRETED
*DIFFERENTLY IN DIFF CLASSES).

INTERFACE I1.
  METHODS : M1.
ENDINTERFACE.

CLASS C1 DEFINITION.
  PUBLIC SECTION.
  INTERFACES : I1.
ENDCLASS.

CLASS C1 IMPLEMENTATION.
  METHOD I1~M1.
    WRITE:/5 'I AM METHOD M1 IN C1'.
  ENDMETHOD.
ENDCLASS.

CLASS C2 DEFINITION.
  PUBLIC SECTION.
  INTERFACES : I1.
ENDCLASS.

CLASS C2 IMPLEMENTATION.
  METHOD I1~M1.
    WRITE:/5 'I AM METHOD M1 IN C1'.
  ENDMETHOD.
ENDCLASS.

START-OF-SELECTION.
DATA : OREF1 TYPE REF TO C1,
       OREF2 TYPE REF TO C2,
       IREF TYPE REF TO I1.
       CREATE OBJECT : OREF1,
                       OREF2.
       IREF = OREF1.

       CALL METHOD IREF->M1.
       IREF = OREF2.
       CALL METHOD IREF->M1.